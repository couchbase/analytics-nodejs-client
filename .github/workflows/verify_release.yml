name: verify_release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The version of the SDK to install and verify."
        required: true
        default: ""
        type: string
      npm_tag:
        description: "The tag to use to install the SDK."
        required: false
        default: ""
        type: string
  workflow_call:
    inputs:
      version:
        description: "The version of the SDK to install and verify."
        required: true
        default: ""
        type: string
      npm_tag:
        description: "The tag to use to install the SDK."
        required: false
        default: ""
        type: string

env:
  DEFAULT_NODE: "20"

jobs:
  validate-input:
    runs-on: ubuntu-22.04
    steps:
      - name: Verify SDK version
        if: inputs.version == ''
        run: |
          echo "::error Must provide a valid SDK version."
          exit 1

  test-setup:
    runs-on: ubuntu-22.04
    needs: validate-input
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.DEFAULT_NODE }}
      - name: Setup test directory
        run: |
          mkdir NCBAC-test
          cd NCBAC-test
          curl -o analyticsQuickTest.cjs ${CI_SCRIPTS_URL}/releaseSmokeTests/analyticsQuickTest.cjs
          curl -o analyticsQuickTest.mjs ${CI_SCRIPTS_URL}/releaseSmokeTests/analyticsQuickTest.mjs
          ls -alh
        env:
          CI_SCRIPTS_URL: "https://raw.githubusercontent.com/couchbaselabs/sdkbuild-jenkinsfiles/master/couchnode"
      - name: Upload test setup
        uses: actions/upload-artifact@v4
        with:
          retention-days: 1
          name: NCBAC-test-setup
          path: |
            NCBAC-test/

  verify-cbdinocluster:
    runs-on: ubuntu-22.04
    needs: test-setup
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-22.04']
        node-version: ["20", "22", "24"]
    steps:
      - name: Install cbdinocluster
        run: |
          mkdir -p "$HOME/bin"
          wget -nv -O $HOME/bin/cbdinocluster https://github.com/couchbaselabs/cbdinocluster/releases/download/v0.0.66/cbdinocluster-linux-amd64
          chmod +x $HOME/bin/cbdinocluster
          echo "$HOME/bin" >> $GITHUB_PATH
      - name: Install s3mock
        run: |
          docker pull adobe/s3mock
          docker pull nginx
      - name: Initialize cbdinocluster
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cbdinocluster -v init --auto
      - name: Start couchbase cluster
        env:
          CLUSTERCONFIG: |
            columnar: true
            nodes:
              - count: 3
                version: 1.2.0
                docker:
                  image: ghcr.io/cb-vanilla/columnar:1.2.0-1055
            docker:
              load-balancer: true
              use-dino-certs: true
        run: |
          CBDC_ID=$(cbdinocluster -v alloc --def="${CLUSTERCONFIG}")
          CBDC_CONNSTR=$(cbdinocluster -v connstr --tls --analytics $CBDC_ID)
          echo "CBDC_ID=$CBDC_ID" >> "$GITHUB_ENV"
          echo "CBDC_CONNSTR=$CBDC_CONNSTR" >> "$GITHUB_ENV"
          echo "NCBACCSTR=$CBDC_CONNSTR" >> "$GITHUB_ENV"
          echo "NCBACUSER=Administrator" >> "$GITHUB_ENV"
          echo "NCBACPASS=password" >> "$GITHUB_ENV"
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Confirm Node version
        run: |
          node --version
          node -p "process.arch"
      - uses: actions/download-artifact@v4
        with:
          name: NCBAC-test-setup
          path: NCBAC
      - name: Write testConfig.ini
        run: |
          cat > NCBAC/testConfig.ini <<EOF
          connstr = $NCBACCSTR
          username = $NCBACUSER
          password = $NCBACPASS
          fqdn = travel-sample.inventory.fqdn
          nonprod = false
          disable_cert_verification = true
          EOF
          echo "Written testConfig.ini:"
          cat NCBAC/testConfig.ini
      - name: Run verification (install via tag)
        if: ${{ inputs.npm_tag != '' }}
        run: |
          env
          node --version
          cd NCBAC
          ls -alh
          npm init -y
          npm install ini
          npm install couchbase-analytics@$NPM_TAG -ddd
          npm list --depth=2
          node analyticsQuickTest.cjs
          node analyticsQuickTest.mjs
        env:
          NPM_TAG: ${{ inputs.npm_tag }}
      - name: Run verification (install via version)
        if: ${{ inputs.npm_tag == '' }}
        run: |
          env
          node --version
          cd NCBAC
          ls -alh
          npm init -y
          npm install ini
          npm install couchbase-analytics@$SDK_VERSION -ddd
          npm list --depth=2
          node analyticsQuickTest.cjs
          node analyticsQuickTest.mjs
        env:
          SDK_VERSION: ${{ inputs.version }}
